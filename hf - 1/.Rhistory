# summarise: a többi változó összetömmörítése
mba_nemenkent <- mba_selected %>%
group_by(Gender) %>%
summarize(mean(Result10))
mba_selected2 <- mba %>%
select(Gender, Result10, Result12) %>%
group_by(Gender) %>%
summarize(Result10), max(Result12))
mba_selected2 <- mba %>%
select(Gender, Result10, Result12) %>%
group_by(Gender) %>%
summarize(mean(Result10), max(Result12))
ggplot(house) +
aes(x = negyzetmeter, y = ar) +
geom_point(colour = "blue") +
theme_minimal()
ggplot(house_data) +
aes(x =negyzetmeter, y = ar) +
geom_point(colour = "lightblue") +
labs(
x = "Alapterület (négyzetméter)",
y = "Ár",
title = "Alapterület és ár közti kapcsolat"
) +
theme_light() +
theme(
plot.title = element_text(size = 14L,
face = "bold",
hjust = 0.5)
) +
geom_smooth(method = "lm", colour = "red", size = 0.8)
ggplot(house) +
aes(x =negyzetmeter, y = ar) +
geom_point(colour = "lightblue") +
labs(
x = "Alapterület (négyzetméter)",
y = "Ár",
title = "Alapterület és ár közti kapcsolat"
) +
theme_light() +
theme(
plot.title = element_text(size = 14L,
face = "bold",
hjust = 0.5)
) +
geom_smooth(method = "lm", colour = "red", size = 0.8)
esquisse::esquisser()
#esquisse::esquisser() ezt hol tudom kimásolni?
esquisse::esquisser()
esquisse::esquisser()
library(ggplot2)
ggplot(mba) +
aes(x = Gender, y = MBA) +
geom_boxplot(fill = "#FF761A") +
theme_bw()
setwd("~/Documents/Documents - betts’s MacBook Air/rajk/kurzusok/2.félév/ökonometria/hf - 1")
library(tidyverse)
read_csv("hotelbookingdata.csv")
read_csv("hotelbookingdata.csv")
read_csv("hotelbookingdata.csv")
hotels_data <- read.csv("hotelbookingdata.csv")
setwd("~/Documents/Documents - betts’s MacBook Air/rajk/kurzusok/2.félév/ökonometria/hf - 1")
library(tidyverse)
hotels_data <- read.csv("hotelbookingdata.csv")
colnames(hotels_data)
View(hotels_data)
hotels_data <- hotels_data %>% mutate(citycenter_distance = as.factor(center1distance))
hotels_data<- hotels_data %>% mutate(sightname = as.factor(center2label))
hotels_data <- hotels_data %>% mutate(sight_distance = as.factor(center2distance))
hotels_data <- hotels_data %>% mutate(citycenter_distance = as.factor(center1distance))
#1. setting working directory
setwd("~/Documents/Documents - betts’s MacBook Air/rajk/kurzusok/2.félév/ökonometria/hf - 1")
#2. loading relevant packages
library(tidyverse)
#4 putting data in R data table
hotels_data <- read.csv("hotelbookingdata.csv")
#1. gathering all types of variables
colnames(hotels_data)
#2. renaming columns
hotels_data <- hotels_data %>% mutate(citycenter_distance = as.factor(center1distance))
hotels_data<- hotels_data %>% mutate(sightname = as.factor(center2label))
hotels_data <- hotels_data %>% mutate(sight_distance = as.factor(center2distance))
#3. keeping variables that have relevant information
aggregated_data <- hotels_data %>%
select(addresscountryname, city_actual, hotel_id, price, accommodationtype, citycenter_distance, sightname, sight_distance, offer, starrating, guestreviewsrating, offer, offer_cat)
#5. gathering the unique accommodationtype column variables
accommodationtype <- unique(hotels_data$accommodationtype)
print(accommodationtype)
aggregated_data$accommodationtype <- recode(aggregated_data$accommodationtype,
"_ACCOM_TYPE@Hotel" = "Hotel",
"_ACCOM_TYPE@Apart-hotel" = "Apart-hotel",
"_ACCOM_TYPE@Guest House" = "Guest House",
"_ACCOM_TYPE@Villa" = "Villa",
"_ACCOM_TYPE@Vacation home Condo" = "Vacation home Condo",
"_ACCOM_TYPE@Motel"   = " Motel",
"_ACCOM_TYPE@Caravan Park" = "Caravan Park",
"_ACCOM_TYPE@Palace"  = "Palace",
"_ACCOM_TYPE@Hostel" = "Hostel",
"_ACCOM_TYPE@House boat" = "House boat",
"_ACCOM_TYPE@Bed and breakfast" = "Bed and breakfast",
"_ACCOM_TYPE@Country House"  = "Country House",
"_ACCOM_TYPE@Cottage" = "Cottage",
"_ACCOM_TYPE@Castle" = "Castle",
"_ACCOM_TYPE@Cabin / Lodge" = "Cabin / Lodge",
"_ACCOM_TYPE@Chalet" = "Chalet",
"_ACCOM_TYPE@Apartment" = "Apartment",
"_ACCOM_TYPE@Inn" = "Inn",
"_ACCOM_TYPE@Resort" = "Resort",
"_ACCOM_TYPE@All inclusive" = "All inclusive",
"_ACCOM_TYPE@Pension" = "Pension",
"_ACCOM_TYPE@Pousada" = "Pousada",
"_ACCOM_TYPE@" = "Ismeretlen")
gc()
gc()
#1. setting working directory
setwd("~/Documents/Documents - betts’s MacBook Air/rajk/kurzusok/2.félév/ökonometria/hf - 1")
#2. loading relevant packages
library(tidyverse)
#4 putting data in R data table
hotels_data <- read.csv("hotelbookingdata.csv")
```
hotels_data <- hotels_data %>% mutate(citycenter_distance = as.factor(center1distance))
hotels_data<- hotels_data %>% mutate(sightname = as.factor(center2label))
hotels_data <- hotels_data %>% mutate(sight_distance = as.factor(center2distance))
filtered_data <- aggregated_data %>%
filter(city_actual == "Berlin")
filter(city_actual == "Berlin")
filtered_data <- hotels_data %>%
filter(city_actual == "Berlin")
View(filtered_data)
View(filtered_data)
table <- table(city_actual, s_city)
table <- table1(city_actual, s_city)
table <- table("city_actual", "s_city")
table <- table(city_actual, s_city)
chisq.test(table)
table <- table(hotels_data$city_actual, hotels_data$s_city)
chisq.test(table)
identical(hotels_data$city_actual, hotels_data$s_city)
eltérés <- which(hotels_data$city_actual, hotels_data$s_city)
elteres <- which(hotels_data$city_actual, hotels_data$s_city)
elteres <- which(hotels_data$city_actual != hotels_data$s_city)
print(elteres)
View(hotels_data)
proba_data <- hotels_data %>%
select(city_actual, s_city)
identical(proba_data$city_actual, proba_data$s_city)
elteres <- which(proba_data$city_actual != proba_data$s_city)
print(elteres)
print(elteres)
View(proba_data)
proba_data <- filtered_data %>%
select(city_actual, s_city)
proba_data <- filtered_data %>%
select(city_actual, s_city)
elteres <- which(proba_data$city_actual != proba_data$s_city)
identical(proba_data$city_actual, proba_data$s_city)
print(elteres)
aggregated_data <- filtered_data %>%
select(addresscountryname, city_actual, neighbourhood, hotel_id, price, price_night, accommodationtype, citycenter_distance, sightname, sight_distance, offer, starrating, guestreviewsrating, rating_reviewcount, rating2_ta, rating2_ta_reviewcount, scarce_room, offer, offer_cat, year, month, weekend, holiday)
View(aggregated_data)
aggregated_data$accommodationtype <- recode(aggregated_data$accommodationtype,
"_ACCOM_TYPE@Hotel" = "Hotel",
"_ACCOM_TYPE@Apart-hotel" = "Apart-hotel",
"_ACCOM_TYPE@Guest House" = "Guest House",
"_ACCOM_TYPE@Villa" = "Villa",
"_ACCOM_TYPE@Vacation home Condo" = "Vacation home Condo",
"_ACCOM_TYPE@Motel"   = " Motel",
"_ACCOM_TYPE@Caravan Park" = "Caravan Park",
"_ACCOM_TYPE@Palace"  = "Palace",
"_ACCOM_TYPE@Hostel" = "Hostel",
"_ACCOM_TYPE@House boat" = "House boat",
"_ACCOM_TYPE@Bed and breakfast" = "Bed and breakfast",
"_ACCOM_TYPE@Country House"  = "Country House",
"_ACCOM_TYPE@Cottage" = "Cottage",
"_ACCOM_TYPE@Castle" = "Castle",
"_ACCOM_TYPE@Cabin / Lodge" = "Cabin / Lodge",
"_ACCOM_TYPE@Chalet" = "Chalet",
"_ACCOM_TYPE@Apartment" = "Apartment",
"_ACCOM_TYPE@Inn" = "Inn",
"_ACCOM_TYPE@Resort" = "Resort",
"_ACCOM_TYPE@All inclusive" = "All inclusive",
"_ACCOM_TYPE@Pension" = "Pension",
"_ACCOM_TYPE@Pousada" = "Pousada",
"_ACCOM_TYPE@" = "Ismeretlen")
aggregated_data$citycenter_distance <- gsub(" miles| mile", "", filtered_data$citycenter_distance)
filtered_data$citycenter_distance <- as.numeric(filtered_data$citycenter_distance)
filtered_data$sight_distance <- as.numeric(filtered_data$sight_distance)
aggregated_data$sight_distance <- gsub(" miles| mile", "", filtered_data$sight_distance)
filtered_data$sight_distance <- as.numeric(filtered_data$sight_distance)
aggregated_data$guestreviewsrating <- gsub(" miles| mile", "", filtered_data$guestreviewsrating)
filtered_data$guestreviewsrating <- as.numeric(filtered_data$guestreviewsrating)
aggregated_data$guestreviewsrating <- gsub("/5", "", filtered_data$guestreviewsrating)
aggregated_data$guestreviewsrating <- gsub("/5", "", filtered_data$guestreviewsrating)
filtered_data$guestreviewsrating <- as.numeric(filtered_data$guestreviewsrating)
filtered_data$offer_cat <- as.numeric(filtered_data$offer_cat)
aggregated_data$offer_cat <- gsub(" offer| no offer", "", filtered_data$offer_cat)
View(hotels_data)
aggregated_data$citycenter_distance <- gsub(" miles| mile", "", filtered_data$citycenter_distance)
#1. setting working directory
setwd("~/Documents/Documents - betts’s MacBook Air/rajk/kurzusok/2.félév/ökonometria/hf - 1")
#2. loading relevant packages
library(tidyverse)
#4 putting data in R data table
hotels_data <- read.csv("hotelbookingdata.csv")
#1. filtering data by a specific city - Berlin
filtered_data <- hotels_data %>%
filter(city_actual == "Berlin")
#1. gathering all types of variables
colnames(hotels_data)
#2. renaming columns
hotels_data <- hotels_data %>% mutate(citycenter_distance = as.factor(center1distance))
hotels_data<- hotels_data %>% mutate(sightname = as.factor(center2label))
hotels_data <- hotels_data %>% mutate(sight_distance = as.factor(center2distance))
proba_data <- filtered_data %>%
select(city_actual, s_city)
identical(proba_data$city_actual, proba_data$s_city)
elteres <- which(proba_data$city_actual != proba_data$s_city)
print(elteres)
#3. keeping variables that have relevant information
aggregated_data <- filtered_data %>%
select(addresscountryname, city_actual, neighbourhood, hotel_id, price, price_night, accommodationtype, citycenter_distance, sightname, sight_distance, offer, starrating, guestreviewsrating, rating_reviewcount, rating2_ta, rating2_ta_reviewcount, scarce_room, offer, offer_cat, year, month, weekend, holiday)
aggregated_data <- filtered_data %>%
select(addresscountryname, city_actual, neighbourhood, hotel_id, price, price_night, accommodationtype, citycenter_distance, sightname, sight_distance, offer, starrating, guestreviewsrating, rating_reviewcount, rating2_ta, rating2_ta_reviewcount, scarce_room, offer, offer_cat, year, month, weekend, holiday)
hotels_data <- hotels_data %>% mutate(citycenter_distance = as.factor(center1distance))
hotels_data<- hotels_data %>% mutate(sightname = as.factor(center2label))
hotels_data <- hotels_data %>% mutate(sight_distance = as.factor(center2distance))
aggregated_data <- filtered_data %>%
select(addresscountryname, city_actual, neighbourhood, hotel_id, price, price_night, accommodationtype, citycenter_distance, sightname, sight_distance, offer, starrating, guestreviewsrating, rating_reviewcount, rating2_ta, rating2_ta_reviewcount, scarce_room, offer, offer_cat, year, month, weekend, holiday)
View(filtered_data)
aggregated_data$accommodationtype <- recode(aggregated_data$accommodationtype,
"_ACCOM_TYPE@Hotel" = "Hotel",
"_ACCOM_TYPE@Apart-hotel" = "Apart-hotel",
"_ACCOM_TYPE@Guest House" = "Guest House",
"_ACCOM_TYPE@Villa" = "Villa",
"_ACCOM_TYPE@Vacation home Condo" = "Vacation home Condo",
"_ACCOM_TYPE@Motel"   = " Motel",
"_ACCOM_TYPE@Caravan Park" = "Caravan Park",
"_ACCOM_TYPE@Palace"  = "Palace",
"_ACCOM_TYPE@Hostel" = "Hostel",
"_ACCOM_TYPE@House boat" = "House boat",
"_ACCOM_TYPE@Bed and breakfast" = "Bed and breakfast",
"_ACCOM_TYPE@Country House"  = "Country House",
"_ACCOM_TYPE@Cottage" = "Cottage",
"_ACCOM_TYPE@Castle" = "Castle",
"_ACCOM_TYPE@Cabin / Lodge" = "Cabin / Lodge",
"_ACCOM_TYPE@Chalet" = "Chalet",
"_ACCOM_TYPE@Apartment" = "Apartment",
"_ACCOM_TYPE@Inn" = "Inn",
"_ACCOM_TYPE@Resort" = "Resort",
"_ACCOM_TYPE@All inclusive" = "All inclusive",
"_ACCOM_TYPE@Pension" = "Pension",
"_ACCOM_TYPE@Pousada" = "Pousada",
"_ACCOM_TYPE@" = "Ismeretlen")
filtered_data <- hotels_data %>% mutate(citycenter_distance = as.factor(center1distance))
filtered_data<- hotels_data %>% mutate(sightname = as.factor(center2label))
filtered_data <- hotels_data %>% mutate(sight_distance = as.factor(center2distance))
aggregated_data <- filtered_data %>%
select(addresscountryname, city_actual, neighbourhood, hotel_id, price, price_night, accommodationtype, citycenter_distance, sightname, sight_distance, offer, starrating, guestreviewsrating, rating_reviewcount, rating2_ta, rating2_ta_reviewcount, scarce_room, offer, offer_cat, year, month, weekend, holiday)
aggregated_data$accommodationtype <- recode(aggregated_data$accommodationtype,
"_ACCOM_TYPE@Hotel" = "Hotel",
"_ACCOM_TYPE@Apart-hotel" = "Apart-hotel",
"_ACCOM_TYPE@Guest House" = "Guest House",
"_ACCOM_TYPE@Villa" = "Villa",
"_ACCOM_TYPE@Vacation home Condo" = "Vacation home Condo",
"_ACCOM_TYPE@Motel"   = " Motel",
"_ACCOM_TYPE@Caravan Park" = "Caravan Park",
"_ACCOM_TYPE@Palace"  = "Palace",
"_ACCOM_TYPE@Hostel" = "Hostel",
"_ACCOM_TYPE@House boat" = "House boat",
"_ACCOM_TYPE@Bed and breakfast" = "Bed and breakfast",
"_ACCOM_TYPE@Country House"  = "Country House",
"_ACCOM_TYPE@Cottage" = "Cottage",
"_ACCOM_TYPE@Castle" = "Castle",
"_ACCOM_TYPE@Cabin / Lodge" = "Cabin / Lodge",
"_ACCOM_TYPE@Chalet" = "Chalet",
"_ACCOM_TYPE@Apartment" = "Apartment",
"_ACCOM_TYPE@Inn" = "Inn",
"_ACCOM_TYPE@Resort" = "Resort",
"_ACCOM_TYPE@All inclusive" = "All inclusive",
"_ACCOM_TYPE@Pension" = "Pension",
"_ACCOM_TYPE@Pousada" = "Pousada",
"_ACCOM_TYPE@" = "Ismeretlen")
aggregated_data$citycenter_distance <- gsub(" miles| mile", "", filtered_data$citycenter_distance)
filtered_data$citycenter_distance <- as.numeric(filtered_data$citycenter_distance)
View(aggregated_data)
filtered_data$sight_distance <- as.numeric(filtered_data$sight_distance)
aggregated_data$sight_distance <- gsub(" miles| mile", "", filtered_data$sight_distance)
filtered_data$sight_distance <- as.numeric(filtered_data$sight_distance)
View(filtered_data)
View(filtered_data)
View(hotels_data)
#1. setting working directory
setwd("~/Documents/Documents - betts’s MacBook Air/rajk/kurzusok/2.félév/ökonometria/hf - 1")
#2. loading relevant packages
library(tidyverse)
#4 putting data in R data table
hotels_data <- read.csv("hotelbookingdata.csv")
#1. filtering data by a specific city - Berlin
filtered_data <- hotels_data %>%
filter(city_actual == "Berlin")
```
filtered_data <- hotels_data %>% mutate(citycenter_distance = as.factor(center1distance))
filtered_data<- hotels_data %>% mutate(sightname = as.factor(center2label))
filtered_data <- hotels_data %>% mutate(sight_distance = as.factor(center2distance))
View(filtered_data)
View(hotels_data)
colnames(hotels_data)
colnames(filtered_data)
filtered_data <- hotels_data %>% mutate(citycenter_distance = as.factor(center1distance))
filtered_data<- hotels_data %>% mutate(sightname = as.factor(center2label))
filtered_data <- hotels_data %>% mutate(sight_distance = as.factor(center2distance))
colnames(filtered_data)
filtered_data <- hotels_data %>% mutate(citycenter_distance = as.factor(center1distance))
proba_data <- filtered_data %>%
select(city_actual, s_city)
proba_data <- filtered_data %>%
select(city_actual, s_city)
View(proba_data)
filtered_data <- hotels_data %>%
filter(city_actual == "Berlin")
filtered_data <- hotels_data %>% mutate(citycenter_distance = as.factor(center1distance))
filtered_data<- hotels_data %>% mutate(sightname = as.factor(center2label))
filtered_data <- hotels_data %>% mutate(sight_distance = as.factor(center2distance))
filtered_data <- hotels_data %>%
filter(city_actual == "Berlin")
filtered_data <- filtered_data %>% mutate(citycenter_distance = as.factor(center1distance))
filtered_data<- filtered_data %>% mutate(sightname = as.factor(center2label))
filtered_data <- filtered_data %>% mutate(sight_distance = as.factor(center2distance))
identical(proba_data$city_actual, proba_data$s_city)
elteres <- which(proba_data$city_actual != proba_data$s_city)
print(elteres)
proba_data <- filtered_data %>%
select(city_actual, s_city)
proba_data <- filtered_data %>%
select(city_actual, s_city)
identical(proba_data$city_actual, proba_data$s_city)
elteres <- which(proba_data$city_actual != proba_data$s_city)
print(elteres)
aggregated_data <- filtered_data %>%
select(addresscountryname, city_actual, neighbourhood, hotel_id, price, price_night, accommodationtype, citycenter_distance, sightname, sight_distance, offer, starrating, guestreviewsrating, rating_reviewcount, rating2_ta, rating2_ta_reviewcount, scarce_room, offer, offer_cat, year, month, weekend, holiday)
aggregated_data$accommodationtype <- recode(aggregated_data$accommodationtype,
"_ACCOM_TYPE@Hotel" = "Hotel",
"_ACCOM_TYPE@Apart-hotel" = "Apart-hotel",
"_ACCOM_TYPE@Guest House" = "Guest House",
"_ACCOM_TYPE@Villa" = "Villa",
"_ACCOM_TYPE@Vacation home Condo" = "Vacation home Condo",
"_ACCOM_TYPE@Motel"   = " Motel",
"_ACCOM_TYPE@Caravan Park" = "Caravan Park",
"_ACCOM_TYPE@Palace"  = "Palace",
"_ACCOM_TYPE@Hostel" = "Hostel",
"_ACCOM_TYPE@House boat" = "House boat",
"_ACCOM_TYPE@Bed and breakfast" = "Bed and breakfast",
"_ACCOM_TYPE@Country House"  = "Country House",
"_ACCOM_TYPE@Cottage" = "Cottage",
"_ACCOM_TYPE@Castle" = "Castle",
"_ACCOM_TYPE@Cabin / Lodge" = "Cabin / Lodge",
"_ACCOM_TYPE@Chalet" = "Chalet",
"_ACCOM_TYPE@Apartment" = "Apartment",
"_ACCOM_TYPE@Inn" = "Inn",
"_ACCOM_TYPE@Resort" = "Resort",
"_ACCOM_TYPE@All inclusive" = "All inclusive",
"_ACCOM_TYPE@Pension" = "Pension",
"_ACCOM_TYPE@Pousada" = "Pousada",
"_ACCOM_TYPE@" = "Ismeretlen")
View(aggregated_data)
aggregated_data$citycenter_distance <- gsub(" miles| mile", "", filtered_data$citycenter_distance)
View(filtered_data)
filtered_data$citycenter_distance <- as.numeric(filtered_data$citycenter_distance)
aggregated_data$sight_distance <- gsub(" miles| mile", "", filtered_data$sight_distance)
filtered_data$sight_distance <- as.numeric(filtered_data$sight_distance)
aggregated_data$guestreviewsrating <- gsub(" /5", "", filtered_data$guestreviewsrating)
filtered_data$guestreviewsrating <- as.numeric(filtered_data$guestreviewsrating)
aggregated_data$offer_cat <- gsub(" offer| no offer", "", filtered_data$offer_cat)
filtered_data$guestreviewsrating <- as.numeric(filtered_data$guestreviewsrating)
hotels_data <- read.csv("hotelbookingdata.csv")
filtered_data <- hotels_data %>%
filter(city_actual == "Berlin")
filtered_data <- hotels_data %>%
filter(city_actual == "Berlin")
colnames(filtered_data)
filtered_data <- filtered_data %>% mutate(citycenter_distance = as.factor(center1distance))
filtered_data<- filtered_data %>% mutate(sightname = as.factor(center2label))
filtered_data <- filtered_data %>% mutate(sight_distance = as.factor(center2distance))
hypothesis <- filtered_data %>%
select(city_actual, s_city)
hypothesis <- filtered_data %>%
select(city_actual, s_city)
identical(hypothesis$city_actual, hypothesis$s_city)
aggregated_data <- filtered_data %>%
select(addresscountryname, city_actual, neighbourhood, hotel_id, price, price_night, accommodationtype, citycenter_distance, sightname, sight_distance, offer, starrating, guestreviewsrating, rating_reviewcount, rating2_ta, rating2_ta_reviewcount, scarce_room, offer, offer_cat, year, month, weekend, holiday)
aggregated_data <- filtered_data %>%
select(addresscountryname, city_actual, neighbourhood, hotel_id, price, price_night, accommodationtype, citycenter_distance, sightname, sight_distance, offer, starrating, guestreviewsrating, rating_reviewcount, rating2_ta, rating2_ta_reviewcount, scarce_room, offer, offer_cat, year, month, weekend, holiday)
accommodationtype <- unique(aggregated$accommodationtype)
accommodationtype <- unique(aggregated_data$accommodationtype)
print(accommodationtype)
aggregated_data$accommodationtype <- recode(aggregated_data$accommodationtype,
"_ACCOM_TYPE@Hotel" = "Hotel",
"_ACCOM_TYPE@Apart-hotel" = "Apart-hotel",
"_ACCOM_TYPE@Guest House" = "Guest House",
"_ACCOM_TYPE@Motel"   = " Motel",
"_ACCOM_TYPE@Pension"  = "Pension",
"_ACCOM_TYPE@Hostel" = "Hostel",
"_ACCOM_TYPE@Apartment" = "Apartment",)
View(aggregated_data)
aggregated_data$citycenter_distance <- gsub(" miles| mile", "", filtered_data$citycenter_distance)
filtered_data$citycenter_distance <- as.numeric(filtered_data$citycenter_distance)
filtered_data$sight_distance <- as.numeric(filtered_data$sight_distance)
aggregated_data$guestreviewsrating <- gsub(" /5", "", filtered_data$guestreviewsrating)
filtered_data$guestreviewsrating <- as.numeric(filtered_data$guestreviewsrating)
aggregated_data$guestreviewsrating <- gsub(" /5", "", filtered_data$guestreviewsrating)
aggregated_data <- filtered_data %>%
select(addresscountryname, city_actual, neighbourhood, hotel_id, price, price_night, accommodationtype, citycenter_distance, sightname, sight_distance, offer, starrating, guestreviewsrating, rating_reviewcount, rating2_ta, rating2_ta_reviewcount, scarce_room, offer, offer_cat, year, month, weekend, holiday)
View(filtered_data)
View(hotels_data)
filtered_data <- hotels_data %>%
filter(city_actual == "Berlin")
filtered_data <- filtered_data %>% mutate(citycenter_distance = as.factor(center1distance))
filtered_data<- filtered_data %>% mutate(sightname = as.factor(center2label))
filtered_data <- filtered_data %>% mutate(sight_distance = as.factor(center2distance))
hypothesis <- filtered_data %>%
select(city_actual, s_city)
hypothesis <- filtered_data %>%
select(city_actual, s_city)
identical(hypothesis$city_actual, hypothesis$s_city)
aggregated_data <- filtered_data %>%
select(addresscountryname, city_actual, neighbourhood, hotel_id, price, price_night, accommodationtype, citycenter_distance, sightname, sight_distance, offer, starrating, guestreviewsrating, rating_reviewcount, rating2_ta, rating2_ta_reviewcount, scarce_room, offer, offer_cat, year, month, weekend, holiday)
accommodationtype <- unique(aggregated_data$accommodationtype)
print(accommodationtype)
aggregated_data$accommodationtype <- recode(aggregated_data$accommodationtype,
"_ACCOM_TYPE@Hotel" = "Hotel",
"_ACCOM_TYPE@Apart-hotel" = "Apart-hotel",
"_ACCOM_TYPE@Guest House" = "Guest House",
"_ACCOM_TYPE@Motel"   = " Motel",
"_ACCOM_TYPE@Pension"  = "Pension",
"_ACCOM_TYPE@Hostel" = "Hostel",
"_ACCOM_TYPE@Apartment" = "Apartment",)
aggregated_data$citycenter_distance <- gsub(" miles| mile", "", filtered_data$citycenter_distance)
filtered_data$citycenter_distance <- as.numeric(filtered_data$citycenter_distance)
aggregated_data$sight_distance <- gsub(" miles| mile", "", filtered_data$sight_distance)
filtered_data$sight_distance <- as.numeric(filtered_data$sight_distance)
aggregated_data$guestreviewsrating <- gsub(" /5", "", filtered_data$guestreviewsrating)
aggregated_data$offer_cat <- gsub(" offer| no offer", "", filtered_data$offer_cat)
any(is.na(filtered_data))
colSums(is.na(filtered_data)
colSums(is.na(filtered_data))
any(is.na(aggregated_data))
colSums(is.na(aggregated_data))
str(aggregated_data)
filtered_data$citycenter_distance <- as.numeric(filtered_data$citycenter_distance)
str(aggregated_data)
aggregated_data$citycenter_distance <- as.numeric(filtered_data$citycenter_distance)
aggregated_data$sight_distance <- as.numeric(filtered_data$sight_distance)
str(aggregated_data)
aggregated_data$guestreviewsrating <- as.numeric(filtered_data$guestreviewsrating)
```{r}
```{r}
#1. A setwd paranccsal kijelölöm a mappa helyét, ahonnan el tudom érni az adatfájlokat és ahová el tudom menteni az eredményfájlokat az adattisztítás elvégzése után.
setwd("~/Documents/Documents - betts’s MacBook Air/rajk/kurzusok/2.félév/ökonometria/hf - 1")
#2. Különböző packagek betöltése, amik szükségesek lesznek a feladat során, hogy adott parancsokat elő tudjak hívni.
library(tidyverse)
library(naniar)
#4 Az adatfájl betöltése R-be amivel dolgozni fogok a feladat során
hotels_data <- read.csv("hotelbookingdata.csv")
#1. Az adatok leszűréséhez a "filter" parancsot használtam, amely a hotels_data adattáblából leszűri azokat az adatsorokat, amelyek kifejezetten a Berlin-i hotelekre vonatkoznak. Ezeknek az adatoknak létrehoztam egy új adattáblát - filtered_data néven.
filtered_data <- hotels_data %>%
filter(city_actual == "Berlin")
#1. Ahhoz, hogy lássam az összes oszlopnevet és eldöntsem melyeket kéne átnevezzem, hogy logikusabb legyen számomra az elnevezés, a "colnames" paranccsal összegyűjtöm őket.
colnames(filtered_data)
#2. Számomra nem volt egyértelmű 3 oszlopnak az elnevezése, így a center1distance & center2label & center2distance oszlopokat átnevezetem, citicenter_distance & sightname & sight_distance nevű oszlopokra.
filtered_data <- filtered_data %>% mutate(citycenter_distance = as.factor(center1distance))
filtered_data<- filtered_data %>% mutate(sightname = as.factor(center2label))
filtered_data <- filtered_data %>% mutate(sight_distance = as.factor(center2distance))
#1. Létrehozok egy olyan adattáblát, amelyben csak a city_actual és s_city oszlopok szerepelnek, hogy megpróbáljam bebizonyítani a hipotézisem. Az oszlopok kiemelését a "select" paranccsal fogom véghezvinni.
hypothesis <- filtered_data %>%
select(city_actual, s_city)
#2. Az "identical" paranncsal megnézem, hogy a két oszlopomban megegyeznek-e az értékek és azonos sorrendben vannak-e. Ha lefuttatás után "TRUE" értéket kapok, akkor a két tábla megegyezik egymással.
identical(hypothesis$city_actual, hypothesis$s_city)
#3. Ha "FALSE" értéket kaptam volna, akkor "which" paranccsal meg tudtam volna nézni, hogy mely értékek nem egyeznek. De mivel megegyezett a két oszlop, ezért most ezt a parancsot nem hajtom végre.
#elteres <- which(hypothesis$city_actual != hypothesis$s_city)
#print(elteres)
#3. A "select" paranccsal kiválasztom azokat az oszlopokat, amelyek szükségesek és új sorrendbe rakom őket.
aggregated_data <- filtered_data %>%
select(addresscountryname, city_actual, neighbourhood, hotel_id, price, price_night, accommodationtype, citycenter_distance, sightname, sight_distance, offer, starrating, guestreviewsrating, rating_reviewcount, rating2_ta, rating2_ta_reviewcount, scarce_room, offer, offer_cat, year, month, weekend, holiday)
#4. Az adatok vizsgálata közben kijött, hogy az accommodationtype oszlop változó értékeinek elnevezése nem rögtön egyértelmű, így a "unique" paranccsal összegyűjtöm az összes változót az oszlopban, hogy könnyebben át tudjam nevezni őket.
accommodationtype <- unique(aggregated_data$accommodationtype)
print(accommodationtype)
#5. A 7 változómat leegyszerűsítés miatt "recode" paranccsal átnevezem.
aggregated_data$accommodationtype <- recode(aggregated_data$accommodationtype,
"_ACCOM_TYPE@Hotel" = "Hotel",
"_ACCOM_TYPE@Apart-hotel" = "Apart-hotel",
"_ACCOM_TYPE@Guest House" = "Guest House",
"_ACCOM_TYPE@Motel"   = " Motel",
"_ACCOM_TYPE@Pension"  = "Pension",
"_ACCOM_TYPE@Hostel" = "Hostel",
"_ACCOM_TYPE@Apartment" = "Apartment",)
aggregated_data$citycenter_distance <- gsub(" miles| mile", "", aggregated_data$citycenter_distance)
aggregated_data$citycenter_distance <- as.numeric(aggregated_data$citycenter_distance)
aggregated_data$sight_distance <- gsub(" miles| mile", "", aggregated_data$sight_distance)
aggregated_data$sight_distance <- as.numeric(aggregated_data$sight_distance)
aggregated_data$guestreviewsrating <- gsub(" /5", "", aggregated_data$guestreviewsrating)
guestreviewsrating <- unique(aggregated_data$column_name)
guestreviewsrating <- unique(aggregated_data$guestreviewsrating)
print(guestreviewsrating)
offer_cat <- unique(aggregated_data$offer_cat)
print(offer_cat)
aggregated_data$offer_cat <- gsub(" offer| no offer", "", aggregated_data$offer_cat)
summary(filtered_data)
summary(aggregated_data)
summary(aggregated_data)
colSums(aggregated_data)
colSums(is.na(aggregated_data))
