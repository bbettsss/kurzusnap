x = "Ár",
y = "Gyakoriság",
fill = "Városok") +
scale_fill_manual(values = c("#4b8cc8", "#f58631")) +
scale_color_manual(values = c("#1c3e5d", "#a34700")) +
guides(color = "none") +
theme_minimal() +
theme(text = element_text(family = "Arial"))
combined_hotel %>%
filter( citycenter_distance <= 5) %>%
ggplot (aes(x = citycenter_distance, fill = city_actual, color = city_actual)) +
geom_histogram(position = "dodge", binwidth = 0.2, alpha = 0.7) +
labs(title = "Stockholm-i és Bécsi hotelek távolságának gyakoriságának összehasonlítása",
x = "Távolság (km)",
y = "Gyakoriság",
fill = "Városok") +
scale_fill_manual(values = c("#4b8cc8", "#f58631")) +
scale_color_manual(values = c("#1c3e5d", "#a34700")) +
guides(color = "none") +
theme_minimal() +
theme(text = element_text(family = "Arial"))
View(hotel_stockholm)
View(vienna_data)
gc()
setwd("~/Documents/Documents - betts’s MacBook Air/rajk/kurzusok/2.félév/ökonometria/hf - 2")
#install.packages("ggthemes")
#install.packages("extrafont")
library(tidyverse)
library(dplyr)
library(scales)
library(xtable)
library(modelsummary)
library(ggthemes)
library(extrafont)
hotels_data <- read.csv("hotelbookingdata.csv")
print(unique(hotels_data$addresscountryname))
hotels_data %>%
filter(addresscountryname == "Sweden") %>%
pull(city_actual) %>%
unique() %>%
print()
stockholm_data <- hotels_data %>%
filter(city_actual == "Stockholm")
print(unique(hotels_data$price_night))
stockholm_data %>%
filter(price_night == "price for 1 night") %>%
count()
stockholm_data %>%
filter(price_night == "price for 4 nights") %>%
count()
stockholm_data$price_night <- recode(stockholm_data$price_night,
"price for 1 night" = "1",
"price for 4 nights" = "4",)
stockholm_data$price_night <- as.numeric(stockholm_data$price_night)
str(stockholm_data)
stockholm_data <- stockholm_data %>%
rename(citycenter_distance = center1distance) %>%
rename(sightname = center2label) %>%
rename(sight_distance = center2distance)
identical(stockholm_data$city_actual, stockholm_data$s_city)
stockholm_data <- stockholm_data %>%
select(addresscountryname, city_actual, neighbourhood, hotel_id, price, price_night, accommodationtype, citycenter_distance, sightname, sight_distance, offer, starrating, guestreviewsrating, rating_reviewcount, rating2_ta, rating2_ta_reviewcount, scarce_room, offer, offer_cat, year, month, weekend, holiday)
print(unique(stockholm_data$accommodationtype))
stockholm_data <- stockholm_data %>% mutate(accommodationtype = as.factor(accommodationtype))
stockholm_data$accommodationtype <- recode(stockholm_data$accommodationtype,
"_ACCOM_TYPE@Hotel" = "Hotel",
"_ACCOM_TYPE@Apart-hotel" = "Apart-hotel",
"_ACCOM_TYPE@Guest House" = "Guest House",
"_ACCOM_TYPE@Bed and breakfast" = "Bed and breakfast",
"_ACCOM_TYPE@House boat"  = "House boat",
"_ACCOM_TYPE@Hostel" = "Hostel",
"_ACCOM_TYPE@Apartment" = "Apartment",)
stockholm_data$citycenter_distance <- gsub(" miles| mile", "", stockholm_data$citycenter_distance)
stockholm_data$citycenter_distance <- as.numeric(stockholm_data$citycenter_distance)
stockholm_data$sight_distance <- gsub(" miles| mile", "", stockholm_data$sight_distance)
stockholm_data$sight_distance <- as.numeric(stockholm_data$sight_distance)
stockholm_data$guestreviewsrating <- gsub(" /5", "", stockholm_data$guestreviewsrating)
stockholm_data$guestreviewsrating <- as.numeric(stockholm_data$guestreviewsrating)
stockholm_data$offer_cat <- gsub(" offer| no offer", "", stockholm_data$offer_cat)
str(stockholm_data)
stockholm_data$hotel_id <- as.factor(stockholm_data$hotel_id)
any(is.na(stockholm_data))
#Mivel "TRUE" értéket kaptam, ezért van hiányzó adat az adattáblában. A "colSums" paranccsal összegyűjtöm melyik oszlopban vannak hiányzó adatok és mennyi.
colSums(is.na(stockholm_data))
hotel_stockholm <- stockholm_data %>% filter(accommodationtype=="Hotel")
hotel_stockholm <- hotel_stockholm %>% filter(price_night == 1)
table(hotel_stockholm$price)
hotel_stockholm %>%
filter(price<=500) %>%
ggplot(aes(x = price)) +
geom_histogram(binwidth = 20, color="#1c3e5d", fill = "#4b8cc8", alpha = 0.7) +
labs(title = "Stockholm-i hotelek árainak eloszlása", x = "Ár/éjszaka", y = "Gyakoriság") +
theme_clean() +
theme(text = element_text(family = "Arial"))
hotel_stockholm %>%
filter(price<=500) %>%
ggplot(aes(x = price)) +
geom_histogram(aes(y = ..density..), binwidth = 20, color="#1c3e5d", fill = "#4b8cc8", alpha = 0.7) +
geom_density(color = "#bf57f7", size = 1) +
labs(title = "Stockholm-i hotelek árainak eloszlása", x = "Ár/éjszaka", y = "Gyakoriság") +
theme_clean() +
theme(text = element_text(family = "Arial"))
ggplot(hotel_stockholm, aes(x = citycenter_distance)) +
geom_histogram(binwidth = 0.2, fill = "#4b8cc8", color = "#1c3e5d", alpha = 0.7) +
labs(title = "A Stockholm-i hotelek városközponttól való távolságok eloszlása", x = "Távolság (km)", y = "Gyakoriság") +
theme_clean()+
theme(text = element_text(family = "Arial"))
ggplot(hotel_stockholm, aes(x = citycenter_distance)) +
geom_histogram(aes(y = ..density..), binwidth = 0.2, fill = "#4b8cc8", color = "#1c3e5d", alpha = 0.7) +
geom_density(color = "#bf57f7", size = 1) +
labs(title = "A Stockholm-i hotelek városközponttól való távolságok eloszlása", x = "Távolság (km)", y = "Gyakoriság") +
theme_clean()+
theme(text = element_text(family = "Arial"))
summary(hotel_stockholm$price)
summary(hotel_stockholm$citycenter_distance)
var(hotel_stockholm$price)
sd(hotel_stockholm$price)
vienna_data <- hotels_data %>%
filter(city_actual == "Vienna")
print(unique(vienna_data$price_night))
vienna_data %>%
filter(price_night == "price for 1 night") %>%
count()
vienna_data %>%
filter(price_night == "price for 4 nights") %>%
count()
vienna_data$price_night <- recode(vienna_data$price_night,
"price for 1 night" = "1",
"price for 4 nights" = "4",)
vienna_data$price_night <- as.numeric(vienna_data$price_night)
vienna_data <- vienna_data %>% filter(price_night == 1)
vienna_data <- hotels_data %>%
filter(city_actual == "Vienna")
print(unique(vienna_data$price_night))
vienna_data %>%
filter(price_night == "price for 1 night") %>%
count()
vienna_data %>%
filter(price_night == "price for 4 nights") %>%
count()
vienna_data$price_night <- recode(vienna_data$price_night,
"price for 1 night" = "1",
"price for 4 nights" = "4",)
vienna_data$price_night <- as.numeric(vienna_data$price_night)
vienna_data <- vienna_data %>% filter(price_night == 1)
vienna_data <- vienna_data %>%
rename(citycenter_distance = center1distance) %>%
rename(sightname = center2label) %>%
rename(sight_distance = center2distance)
identical(vienna_data$city_actual, vienna_data$s_city)
vienna_data <- vienna_data %>%
select(addresscountryname, city_actual, neighbourhood, hotel_id, price, price_night, accommodationtype, citycenter_distance, sightname, sight_distance, offer, starrating, guestreviewsrating, rating_reviewcount, rating2_ta, rating2_ta_reviewcount, scarce_room, offer, offer_cat, year, month, weekend, holiday)
vienna_data$accommodationtype <- recode(vienna_data$accommodationtype,
"_ACCOM_TYPE@Hotel" = "Hotel",
"_ACCOM_TYPE@Apart-hotel" = "Apart-hotel",
"_ACCOM_TYPE@Guest House" = "Guest House",
"_ACCOM_TYPE@Bed and breakfast"   = "Bed and breakfast",
"_ACCOM_TYPE@House boat"  = "House boat",
"_ACCOM_TYPE@Hostel" = "Hostel",
"_ACCOM_TYPE@Apartment" = "Apartment",)
vienna_data$citycenter_distance <- gsub(" miles| mile", "", vienna_data$citycenter_distance)
vienna_data$citycenter_distance <- as.numeric(vienna_data$citycenter_distance)
vienna_data$sight_distance <- gsub(" miles| mile", "", vienna_data$sight_distance)
vienna_data$sight_distance <- as.numeric(vienna_data$sight_distance)
vienna_data$guestreviewsrating <- gsub(" /5", "", vienna_data$guestreviewsrating)
vienna_data$guestreviewsrating <- as.numeric(vienna_data$guestreviewsrating)
vienna_data$offer_cat <- gsub(" offer| no offer", "", vienna_data$offer_cat)
stockholm_data$hotel_id <- as.factor(stockholm_data$hotel_id)
any(is.na(stockholm_data))
colSums(is.na(stockholm_data))
vienna_data %>%
filter(price<=700) %>%
ggplot(aes(x = price)) +
geom_histogram(aes(y = ..density..), binwidth = 30, color="#a34700", fill = "#f58631", alpha = 0.7) +
geom_density(color = "#37a626", size = 1) +
labs(title = "Bécsi hotelek árainak eloszlása", x = "Ár/éjszaka", y = "Gyakoriság") +
theme_clean() +
theme(text = element_text(family = "Arial"))
vienna_data <- hotels_data %>%
filter(city_actual == "Vienna")
print(unique(vienna_data$price_night))
vienna_data %>%
filter(price_night == "price for 1 night") %>%
count()
vienna_data %>%
filter(price_night == "price for 4 nights") %>%
count()
vienna_data$price_night <- recode(vienna_data$price_night,
"price for 1 night" = "1",
"price for 4 nights" = "4",)
vienna_data$price_night <- as.numeric(vienna_data$price_night)
vienna_data <- vienna_data %>% filter(price_night == 1)
vienna_data <- vienna_data %>%
rename(citycenter_distance = center1distance) %>%
rename(sightname = center2label) %>%
rename(sight_distance = center2distance)
identical(vienna_data$city_actual, vienna_data$s_city)
vienna_data <- vienna_data %>%
select(addresscountryname, city_actual, neighbourhood, hotel_id, price, price_night, accommodationtype, citycenter_distance, sightname, sight_distance, offer, starrating, guestreviewsrating, rating_reviewcount, rating2_ta, rating2_ta_reviewcount, scarce_room, offer, offer_cat, year, month, weekend, holiday)
vienna_data$accommodationtype <- recode(vienna_data$accommodationtype,
"_ACCOM_TYPE@Hotel" = "Hotel",
"_ACCOM_TYPE@Apart-hotel" = "Apart-hotel",
"_ACCOM_TYPE@Guest House" = "Guest House",
"_ACCOM_TYPE@Bed and breakfast"   = "Bed and breakfast",
"_ACCOM_TYPE@House boat"  = "House boat",
"_ACCOM_TYPE@Hostel" = "Hostel",
"_ACCOM_TYPE@Apartment" = "Apartment",)
vienna_data$citycenter_distance <- gsub(" miles| mile", "", vienna_data$citycenter_distance)
vienna_data$citycenter_distance <- as.numeric(vienna_data$citycenter_distance)
vienna_data$sight_distance <- gsub(" miles| mile", "", vienna_data$sight_distance)
vienna_data$sight_distance <- as.numeric(vienna_data$sight_distance)
vienna_data$guestreviewsrating <- gsub(" /5", "", vienna_data$guestreviewsrating)
vienna_data$guestreviewsrating <- as.numeric(vienna_data$guestreviewsrating)
vienna_data$offer_cat <- gsub(" offer| no offer", "", vienna_data$offer_cat)
stockholm_data$hotel_id <- as.factor(stockholm_data$hotel_id)
any(is.na(stockholm_data))
colSums(is.na(stockholm_data))
hotel_stockholm <- stockholm_data %>% filter(accommodationtype=="Hotel")
View(vienna_data)
vienna_data <- hotels_data %>%
filter(city_actual == "Vienna")
print(unique(vienna_data$price_night))
vienna_data %>%
filter(price_night == "price for 1 night") %>%
count()
vienna_data %>%
filter(price_night == "price for 4 nights") %>%
count()
vienna_data$price_night <- recode(vienna_data$price_night,
"price for 1 night" = "1",
"price for 4 nights" = "4",)
vienna_data$price_night <- as.numeric(vienna_data$price_night)
vienna_data <- vienna_data %>% filter(price_night == 1)
vienna_data <- vienna_data %>%
rename(citycenter_distance = center1distance) %>%
rename(sightname = center2label) %>%
rename(sight_distance = center2distance)
identical(vienna_data$city_actual, vienna_data$s_city)
vienna_data <- vienna_data %>%
select(addresscountryname, city_actual, neighbourhood, hotel_id, price, price_night, accommodationtype, citycenter_distance, sightname, sight_distance, offer, starrating, guestreviewsrating, rating_reviewcount, rating2_ta, rating2_ta_reviewcount, scarce_room, offer, offer_cat, year, month, weekend, holiday)
vienna_data$accommodationtype <- recode(vienna_data$accommodationtype,
"_ACCOM_TYPE@Hotel" = "Hotel",
"_ACCOM_TYPE@Apart-hotel" = "Apart-hotel",
"_ACCOM_TYPE@Guest House" = "Guest House",
"_ACCOM_TYPE@Bed and breakfast"   = "Bed and breakfast",
"_ACCOM_TYPE@House boat"  = "House boat",
"_ACCOM_TYPE@Hostel" = "Hostel",
"_ACCOM_TYPE@Apartment" = "Apartment",)
vienna_data$citycenter_distance <- gsub(" miles| mile", "", vienna_data$citycenter_distance)
vienna_data$citycenter_distance <- as.numeric(vienna_data$citycenter_distance)
vienna_data$sight_distance <- gsub(" miles| mile", "", vienna_data$sight_distance)
vienna_data$sight_distance <- as.numeric(vienna_data$sight_distance)
vienna_data$guestreviewsrating <- gsub(" /5", "", vienna_data$guestreviewsrating)
vienna_data$guestreviewsrating <- as.numeric(vienna_data$guestreviewsrating)
vienna_data$offer_cat <- gsub(" offer| no offer", "", vienna_data$offer_cat)
vienna_data$hotel_id <- as.factor(vienna_data$hotel_id)
any(is.na(vienna_data))
colSums(is.na(vienna_data))
vienna_data <- vienna_data %>% filter(accommodationtype=="Hotel")
vienna_data %>%
filter(price<=800) %>%
ggplot(aes(x = price)) +
geom_histogram(aes(y = ..density..), binwidth = 30, color="#a34700", fill = "#f58631", alpha = 0.7) +
geom_density(color = "#37a626", size = 1) +
labs(title = "Bécsi hotelek árainak eloszlása", x = "Ár/éjszaka", y = "Gyakoriság") +
theme_clean() +
theme(text = element_text(family = "Arial"))
vienna_data %>%
filter(price<=650) %>%
ggplot(aes(x = price)) +
geom_histogram(aes(y = ..density..), binwidth = 30, color="#a34700", fill = "#f58631", alpha = 0.7) +
geom_density(color = "#37a626", size = 1) +
labs(title = "Bécsi hotelek árainak eloszlása", x = "Ár/éjszaka", y = "Gyakoriság") +
theme_clean() +
theme(text = element_text(family = "Arial"))
vienna_data %>%
filter(citycenter_distance <= 5) %>%
ggplot(aes(x = citycenter_distance)) +
geom_histogram(aes(y = ..density..), binwidth = 0.2, fill = "#f58631", color = "#a34700", alpha = 0.7) +
geom_density(color = "#37a626", size = 1) +
labs(title = "A Bécsi hotelek városközponttól való távolságok eloszlása", x = "Távolság (km)", y = "Gyakoriság") +
theme_clean()+
theme(text = element_text(family = "Arial"))
vienna_data %>%
filter(citycenter_distance <= 6) %>%
ggplot(aes(x = citycenter_distance)) +
geom_histogram(aes(y = ..density..), binwidth = 0.2, fill = "#f58631", color = "#a34700", alpha = 0.7) +
geom_density(color = "#37a626", size = 1) +
labs(title = "A Bécsi hotelek városközponttól való távolságok eloszlása", x = "Távolság (km)", y = "Gyakoriság") +
theme_clean()+
theme(text = element_text(family = "Arial"))
vienna_data %>%
filter(citycenter_distance <= 7) %>%
ggplot(aes(x = citycenter_distance)) +
geom_histogram(aes(y = ..density..), binwidth = 0.2, fill = "#f58631", color = "#a34700", alpha = 0.7) +
geom_density(color = "#37a626", size = 1) +
labs(title = "A Bécsi hotelek városközponttól való távolságok eloszlása", x = "Távolság (km)", y = "Gyakoriság") +
theme_clean()+
theme(text = element_text(family = "Arial"))
vienna_data %>%
filter(citycenter_distance <= 6) %>%
ggplot(aes(x = citycenter_distance)) +
geom_histogram(aes(y = ..density..), binwidth = 0.2, fill = "#f58631", color = "#a34700", alpha = 0.7) +
geom_density(color = "#37a626", size = 1) +
labs(title = "A Bécsi hotelek városközponttól való távolságok eloszlása", x = "Távolság (km)", y = "Gyakoriság") +
theme_clean()+
theme(text = element_text(family = "Arial"))
setwd("~/Documents/Documents - betts’s MacBook Air/rajk/kurzusok/2.félév/ökonometria/hf - 2")
#install.packages("ggthemes")
#install.packages("extrafont")
library(tidyverse)
library(dplyr)
library(scales)
library(xtable)
library(modelsummary)
library(ggthemes)
library(extrafont)
hotels_data <- read.csv("hotelbookingdata.csv")
print(unique(hotels_data$addresscountryname))
hotels_data %>%
filter(addresscountryname == "Sweden") %>%
pull(city_actual) %>%
unique() %>%
print()
stockholm_data <- hotels_data %>%
filter(city_actual == "Stockholm")
print(unique(hotels_data$price_night))
stockholm_data %>%
filter(price_night == "price for 1 night") %>%
count()
stockholm_data %>%
filter(price_night == "price for 4 nights") %>%
count()
stockholm_data$price_night <- recode(stockholm_data$price_night,
"price for 1 night" = "1",
"price for 4 nights" = "4",)
stockholm_data$price_night <- as.numeric(stockholm_data$price_night)
str(stockholm_data)
stockholm_data <- stockholm_data %>%
rename(citycenter_distance = center1distance) %>%
rename(sightname = center2label) %>%
rename(sight_distance = center2distance)
identical(stockholm_data$city_actual, stockholm_data$s_city)
stockholm_data <- stockholm_data %>%
select(addresscountryname, city_actual, neighbourhood, hotel_id, price, price_night, accommodationtype, citycenter_distance, sightname, sight_distance, offer, starrating, guestreviewsrating, rating_reviewcount, rating2_ta, rating2_ta_reviewcount, scarce_room, offer, offer_cat, year, month, weekend, holiday)
print(unique(stockholm_data$accommodationtype))
stockholm_data <- stockholm_data %>% mutate(accommodationtype = as.factor(accommodationtype))
stockholm_data$accommodationtype <- recode(stockholm_data$accommodationtype,
"_ACCOM_TYPE@Hotel" = "Hotel",
"_ACCOM_TYPE@Apart-hotel" = "Apart-hotel",
"_ACCOM_TYPE@Guest House" = "Guest House",
"_ACCOM_TYPE@Bed and breakfast" = "Bed and breakfast",
"_ACCOM_TYPE@House boat"  = "House boat",
"_ACCOM_TYPE@Hostel" = "Hostel",
"_ACCOM_TYPE@Apartment" = "Apartment",)
stockholm_data$citycenter_distance <- gsub(" miles| mile", "", stockholm_data$citycenter_distance)
stockholm_data$citycenter_distance <- as.numeric(stockholm_data$citycenter_distance)
stockholm_data$sight_distance <- gsub(" miles| mile", "", stockholm_data$sight_distance)
stockholm_data$sight_distance <- as.numeric(stockholm_data$sight_distance)
stockholm_data$guestreviewsrating <- gsub(" /5", "", stockholm_data$guestreviewsrating)
stockholm_data$guestreviewsrating <- as.numeric(stockholm_data$guestreviewsrating)
stockholm_data$offer_cat <- gsub(" offer| no offer", "", stockholm_data$offer_cat)
str(stockholm_data)
stockholm_data$hotel_id <- as.factor(stockholm_data$hotel_id)
any(is.na(stockholm_data))
#Mivel "TRUE" értéket kaptam, ezért van hiányzó adat az adattáblában. A "colSums" paranccsal összegyűjtöm melyik oszlopban vannak hiányzó adatok és mennyi.
colSums(is.na(stockholm_data))
hotel_stockholm <- stockholm_data %>% filter(accommodationtype=="Hotel")
hotel_stockholm <- hotel_stockholm %>% filter(price_night == 1)
table(hotel_stockholm$price)
hotel_stockholm %>%
filter(price<=500) %>%
ggplot(aes(x = price)) +
geom_histogram(binwidth = 20, color="#1c3e5d", fill = "#4b8cc8", alpha = 0.7) +
labs(title = "Stockholm-i hotelek árainak eloszlása", x = "Ár/éjszaka", y = "Gyakoriság") +
theme_clean() +
theme(text = element_text(family = "Arial"))
hotel_stockholm %>%
filter(price<=500) %>%
ggplot(aes(x = price)) +
geom_histogram(aes(y = ..density..), binwidth = 20, color="#1c3e5d", fill = "#4b8cc8", alpha = 0.7) +
geom_density(color = "#bf57f7", size = 1) +
labs(title = "Stockholm-i hotelek árainak eloszlása", x = "Ár/éjszaka", y = "Gyakoriság") +
theme_clean() +
theme(text = element_text(family = "Arial"))
ggplot(hotel_stockholm, aes(x = citycenter_distance)) +
geom_histogram(binwidth = 0.2, fill = "#4b8cc8", color = "#1c3e5d", alpha = 0.7) +
labs(title = "A Stockholm-i hotelek városközponttól való távolságok eloszlása", x = "Távolság (km)", y = "Gyakoriság") +
theme_clean()+
theme(text = element_text(family = "Arial"))
ggplot(hotel_stockholm, aes(x = citycenter_distance)) +
geom_histogram(aes(y = ..density..), binwidth = 0.2, fill = "#4b8cc8", color = "#1c3e5d", alpha = 0.7) +
geom_density(color = "#bf57f7", size = 1) +
labs(title = "A Stockholm-i hotelek városközponttól való távolságok eloszlása", x = "Távolság (km)", y = "Gyakoriság") +
theme_clean()+
theme(text = element_text(family = "Arial"))
summary(hotel_stockholm$price)
summary(hotel_stockholm$citycenter_distance)
var(hotel_stockholm$price)
sd(hotel_stockholm$price)
vienna_data <- hotels_data %>%
filter(city_actual == "Vienna")
print(unique(vienna_data$price_night))
vienna_data %>%
filter(price_night == "price for 1 night") %>%
count()
vienna_data %>%
filter(price_night == "price for 4 nights") %>%
count()
vienna_data$price_night <- recode(vienna_data$price_night,
"price for 1 night" = "1",
"price for 4 nights" = "4",)
vienna_data$price_night <- as.numeric(vienna_data$price_night)
vienna_data <- vienna_data %>% filter(price_night == 1)
vienna_data <- vienna_data %>%
rename(citycenter_distance = center1distance) %>%
rename(sightname = center2label) %>%
rename(sight_distance = center2distance)
identical(vienna_data$city_actual, vienna_data$s_city)
vienna_data <- vienna_data %>%
select(addresscountryname, city_actual, neighbourhood, hotel_id, price, price_night, accommodationtype, citycenter_distance, sightname, sight_distance, offer, starrating, guestreviewsrating, rating_reviewcount, rating2_ta, rating2_ta_reviewcount, scarce_room, offer, offer_cat, year, month, weekend, holiday)
vienna_data$accommodationtype <- recode(vienna_data$accommodationtype,
"_ACCOM_TYPE@Hotel" = "Hotel",
"_ACCOM_TYPE@Apart-hotel" = "Apart-hotel",
"_ACCOM_TYPE@Guest House" = "Guest House",
"_ACCOM_TYPE@Bed and breakfast"   = "Bed and breakfast",
"_ACCOM_TYPE@House boat"  = "House boat",
"_ACCOM_TYPE@Hostel" = "Hostel",
"_ACCOM_TYPE@Apartment" = "Apartment",)
vienna_data$citycenter_distance <- gsub(" miles| mile", "", vienna_data$citycenter_distance)
vienna_data$citycenter_distance <- as.numeric(vienna_data$citycenter_distance)
vienna_data$sight_distance <- gsub(" miles| mile", "", vienna_data$sight_distance)
vienna_data$sight_distance <- as.numeric(vienna_data$sight_distance)
vienna_data$guestreviewsrating <- gsub(" /5", "", vienna_data$guestreviewsrating)
vienna_data$guestreviewsrating <- as.numeric(vienna_data$guestreviewsrating)
vienna_data$offer_cat <- gsub(" offer| no offer", "", vienna_data$offer_cat)
vienna_data$hotel_id <- as.factor(vienna_data$hotel_id)
any(is.na(vienna_data))
colSums(is.na(vienna_data))
vienna_data <- vienna_data %>% filter(accommodationtype=="Hotel")
vienna_data %>%
filter(price<=650) %>%
ggplot(aes(x = price)) +
geom_histogram(aes(y = ..density..), binwidth = 30, color="#a34700", fill = "#f58631", alpha = 0.7) +
geom_density(color = "#37a626", size = 1) +
labs(title = "Bécsi hotelek árainak eloszlása", x = "Ár/éjszaka", y = "Gyakoriság") +
theme_clean() +
theme(text = element_text(family = "Arial"))
vienna_data %>%
filter(citycenter_distance <= 6) %>%
ggplot(aes(x = citycenter_distance)) +
geom_histogram(aes(y = ..density..), binwidth = 0.2, fill = "#f58631", color = "#a34700", alpha = 0.7) +
geom_density(color = "#37a626", size = 1) +
labs(title = "A Bécsi hotelek városközponttól való távolságok eloszlása", x = "Távolság (km)", y = "Gyakoriság") +
theme_clean()+
theme(text = element_text(family = "Arial"))
summary(vienna_data$price)
summary(vienna_data$citycenter_distance)
var(vienna_data$price)
sd(vienna_data$price)
combined_hotel <- rbind(hotel_stockholm, vienna_data)
combined_hotel %>%
filter(price<=600) %>%
ggplot (aes(x = price, fill = city_actual, color = city_actual)) +
geom_histogram(position = "dodge", binwidth = 30, alpha = 0.7) +
labs(title = "Stockholm-i és Bécsi hotelek árainak gyakoriságának összehasonlítása",
x = "Ár",
y = "Gyakoriság",
fill = "Városok") +
scale_fill_manual(values = c("#4b8cc8", "#f58631")) +
scale_color_manual(values = c("#1c3e5d", "#a34700")) +
guides(color = "none") +
theme_minimal() +
theme(text = element_text(family = "Arial"))
combined_hotel %>%
filter( citycenter_distance <= 5) %>%
ggplot (aes(x = citycenter_distance, fill = city_actual, color = city_actual)) +
geom_histogram(position = "dodge", binwidth = 0.2, alpha = 0.7) +
labs(title = "Stockholm-i és Bécsi hotelek távolságának gyakoriságának összehasonlítása",
x = "Távolság (km)",
y = "Gyakoriság",
fill = "Városok") +
scale_fill_manual(values = c("#4b8cc8", "#f58631")) +
scale_color_manual(values = c("#1c3e5d", "#a34700")) +
guides(color = "none") +
theme_minimal() +
theme(text = element_text(family = "Arial"))
#Stockholm:
summary(hotel_stockholm$price)
summary(hotel_stockholm$citycenter_distance)
var(hotel_stockholm$price)
sd(hotel_stockholm$price)
#Bécs:
summary(vienna_data$price)
summary(vienna_data$citycenter_distance)
var(vienna_data$price)
sd(vienna_data$price)
ggplot(hotel_stockholm, aes(x = citycenter_distance)) +
geom_histogram(aes(y = ..density..), binwidth = 0.2, fill = "#4b8cc8", color = "#1c3e5d", alpha = 0.7) +
geom_density(color = "#bf57f7", size = 1) +
labs(title = "A Stockholm-i hotelek városközponttól való távolságának eloszlása", x = "Távolság (km)", y = "Gyakoriság") +
theme_clean()+
theme(text = element_text(family = "Arial"))
vienna_data %>%
filter(price<=650) %>%
ggplot(aes(x = price)) +
geom_histogram(aes(y = ..density..), binwidth = 20, color="#a34700", fill = "#f58631", alpha = 0.7) +
geom_density(color = "#37a626", size = 1) +
labs(title = "Bécsi hotelek árainak eloszlása", x = "Ár/éjszaka", y = "Gyakoriság") +
theme_clean() +
theme(text = element_text(family = "Arial"))
View(vienna_data)
